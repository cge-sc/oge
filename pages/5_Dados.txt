import hmac
import streamlit as st

tokens = 'a'

with open( "style.css" ) as css:
    st.markdown( f'<style>{css.read()}</style>' , unsafe_allow_html= True)

st.title('Dados da Ouvidoria')

def check_password():
    """Returns `True` if the user had a correct password."""

    def login_form():
        """Form with widgets to collect user information"""
        with st.form("Credentials"):
            st.text_input("UsuÃ¡rio", key="username")
            st.text_input("Senha", type="password", key="password")
            st.form_submit_button("Log in", on_click=password_entered)

    def password_entered():
        """Checks whether a password entered by the user is correct."""
        if st.session_state["username"] in st.secrets[
            "passwords"
        ] and hmac.compare_digest(
            st.session_state["password"],
            st.secrets.passwords[st.session_state["username"]],
        ):
            st.session_state["password_correct"] = True
            global tokens
            tokens = st.session_state["username"]
            #tokens = usuario_orgao.split("_")
            #global usuario
            #global orgao
            #usuario = tokens[0]
            #orgao = tokens[1]
            st.write(tokens)
            del st.session_state["password"]  # Don't store the username or password.
            del st.session_state["username"]
        else:
            st.session_state["password_correct"] = False

    # Return True if the username + password is validated.
    if st.session_state.get("password_correct", False):
        return True

    # Show inputs for username + password.
    login_form()
    if "password_correct" in st.session_state:
        st.error("ðŸ˜• UsuÃ¡rio nÃ£o cadastrado ou senha incorreta!")
    return False


if not check_password():
    st.stop()

# Main Streamlit app starts here

st.write("Bem-vindo")
st.write(tokens)

